/*
 * Geocoding and Search API v7
 *
 * This document describes the Geocoding and Search API.
 *
 * API version: 7.78
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package here

import (
	"encoding/json"
)

// ExtendedAttribute struct for ExtendedAttribute
type ExtendedAttribute struct {
	// EV charging pool information
	EvStation *EvChargingAttributes `json:"evStation,omitempty"`
}

// NewExtendedAttribute instantiates a new ExtendedAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtendedAttribute() *ExtendedAttribute {
	this := ExtendedAttribute{}
	return &this
}

// NewExtendedAttributeWithDefaults instantiates a new ExtendedAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtendedAttributeWithDefaults() *ExtendedAttribute {
	this := ExtendedAttribute{}
	return &this
}

// GetEvStation returns the EvStation field value if set, zero value otherwise.
func (o *ExtendedAttribute) GetEvStation() EvChargingAttributes {
	if o == nil || o.EvStation == nil {
		var ret EvChargingAttributes
		return ret
	}
	return *o.EvStation
}

// GetEvStationOk returns a tuple with the EvStation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedAttribute) GetEvStationOk() (*EvChargingAttributes, bool) {
	if o == nil || o.EvStation == nil {
		return nil, false
	}
	return o.EvStation, true
}

// HasEvStation returns a boolean if a field has been set.
func (o *ExtendedAttribute) HasEvStation() bool {
	if o != nil && o.EvStation != nil {
		return true
	}

	return false
}

// SetEvStation gets a reference to the given EvChargingAttributes and assigns it to the EvStation field.
func (o *ExtendedAttribute) SetEvStation(v EvChargingAttributes) {
	o.EvStation = &v
}

func (o ExtendedAttribute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EvStation != nil {
		toSerialize["evStation"] = o.EvStation
	}
	return json.Marshal(toSerialize)
}

type NullableExtendedAttribute struct {
	value *ExtendedAttribute
	isSet bool
}

func (v NullableExtendedAttribute) Get() *ExtendedAttribute {
	return v.value
}

func (v *NullableExtendedAttribute) Set(val *ExtendedAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableExtendedAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableExtendedAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtendedAttribute(val *ExtendedAttribute) *NullableExtendedAttribute {
	return &NullableExtendedAttribute{value: val, isSet: true}
}

func (v NullableExtendedAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtendedAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


