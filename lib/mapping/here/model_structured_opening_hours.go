/*
 * Geocoding and Search API v7
 *
 * This document describes the Geocoding and Search API.
 *
 * API version: 7.78
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package here

import (
	"encoding/json"
)

// StructuredOpeningHours struct for StructuredOpeningHours
type StructuredOpeningHours struct {
	// String with a modified [iCalendar DATE-TIME](https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.5) value. The date part is omitted, values starts with the time section maker \\\"T\\\". Example: T132000
	Start string `json:"start"`
	// String with an [iCalendar DURATION](https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.6) value. A closed day has the value PT00:00M
	Duration string `json:"duration"`
	// String with a [RECUR](https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10) rule
	Recurrence string `json:"recurrence"`
}

// NewStructuredOpeningHours instantiates a new StructuredOpeningHours object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuredOpeningHours(start string, duration string, recurrence string, ) *StructuredOpeningHours {
	this := StructuredOpeningHours{}
	this.Start = start
	this.Duration = duration
	this.Recurrence = recurrence
	return &this
}

// NewStructuredOpeningHoursWithDefaults instantiates a new StructuredOpeningHours object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuredOpeningHoursWithDefaults() *StructuredOpeningHours {
	this := StructuredOpeningHours{}
	return &this
}

// GetStart returns the Start field value
func (o *StructuredOpeningHours) GetStart() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *StructuredOpeningHours) GetStartOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *StructuredOpeningHours) SetStart(v string) {
	o.Start = v
}

// GetDuration returns the Duration field value
func (o *StructuredOpeningHours) GetDuration() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *StructuredOpeningHours) GetDurationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *StructuredOpeningHours) SetDuration(v string) {
	o.Duration = v
}

// GetRecurrence returns the Recurrence field value
func (o *StructuredOpeningHours) GetRecurrence() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value
// and a boolean to check if the value has been set.
func (o *StructuredOpeningHours) GetRecurrenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Recurrence, true
}

// SetRecurrence sets field value
func (o *StructuredOpeningHours) SetRecurrence(v string) {
	o.Recurrence = v
}

func (o StructuredOpeningHours) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if true {
		toSerialize["recurrence"] = o.Recurrence
	}
	return json.Marshal(toSerialize)
}

type NullableStructuredOpeningHours struct {
	value *StructuredOpeningHours
	isSet bool
}

func (v NullableStructuredOpeningHours) Get() *StructuredOpeningHours {
	return v.value
}

func (v *NullableStructuredOpeningHours) Set(val *StructuredOpeningHours) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuredOpeningHours) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuredOpeningHours) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuredOpeningHours(val *StructuredOpeningHours) *NullableStructuredOpeningHours {
	return &NullableStructuredOpeningHours{value: val, isSet: true}
}

func (v NullableStructuredOpeningHours) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuredOpeningHours) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


