/*
 * Geocoding and Search API v7
 *
 * This document describes the Geocoding and Search API.
 *
 * API version: 7.78
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package here

import (
	"encoding/json"
)

// TimeZoneInfo struct for TimeZoneInfo
type TimeZoneInfo struct {
	// The name of the time zone as defined in the [tz database](https://en.wikipedia.org/wiki/Tz_database). For example: \"Europe/Berlin\"
	Name string `json:"name"`
	// The UTC offset for this time zone at request time. For example \"+02:00\"
	UtcOffset string `json:"utcOffset"`
}

// NewTimeZoneInfo instantiates a new TimeZoneInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeZoneInfo(name string, utcOffset string, ) *TimeZoneInfo {
	this := TimeZoneInfo{}
	this.Name = name
	this.UtcOffset = utcOffset
	return &this
}

// NewTimeZoneInfoWithDefaults instantiates a new TimeZoneInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeZoneInfoWithDefaults() *TimeZoneInfo {
	this := TimeZoneInfo{}
	return &this
}

// GetName returns the Name field value
func (o *TimeZoneInfo) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TimeZoneInfo) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TimeZoneInfo) SetName(v string) {
	o.Name = v
}

// GetUtcOffset returns the UtcOffset field value
func (o *TimeZoneInfo) GetUtcOffset() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UtcOffset
}

// GetUtcOffsetOk returns a tuple with the UtcOffset field value
// and a boolean to check if the value has been set.
func (o *TimeZoneInfo) GetUtcOffsetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UtcOffset, true
}

// SetUtcOffset sets field value
func (o *TimeZoneInfo) SetUtcOffset(v string) {
	o.UtcOffset = v
}

func (o TimeZoneInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["utcOffset"] = o.UtcOffset
	}
	return json.Marshal(toSerialize)
}

type NullableTimeZoneInfo struct {
	value *TimeZoneInfo
	isSet bool
}

func (v NullableTimeZoneInfo) Get() *TimeZoneInfo {
	return v.value
}

func (v *NullableTimeZoneInfo) Set(val *TimeZoneInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeZoneInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeZoneInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeZoneInfo(val *TimeZoneInfo) *NullableTimeZoneInfo {
	return &NullableTimeZoneInfo{value: val, isSet: true}
}

func (v NullableTimeZoneInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeZoneInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


